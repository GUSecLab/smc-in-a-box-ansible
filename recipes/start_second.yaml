---

- hosts:
    - server
    - output
  vars:
    mysql_user: "smc"
    mysql_password: "smcinabox"
    mysql_host: localhost
    mysql_db_name: "smc"
  become: yes
  tasks:
    - name: Start MySQL service
      systemd:
        name: mysql
        state: started
    - name: Disable innodb redo log
      mysql_query:
        login_user: "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        query: "ALTER INSTANCE DISABLE INNODB REDO_LOG;"
    - name: Create MySQL database
      mysql_db:
        name: "{{ mysql_db_name }}"
        state: present
        login_user: "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"


- name: set shared variables
  hosts: all
  gather_facts: false
  vars:
    - exp_name: "{{ exp_name }}"
      
- name: kick off tcpdump
  hosts: all
  gather_facts: true
  tasks:
    - name: start tcpdump on all hosts
      become: yes
      command: /usr/bin/tcpdump -s 100 -w /tmp/{{ exp_name }}.{{ ansible_facts['hostname'] }}.pcap
      async: 900 # in seconds
      poll: 0 # This detaches the task and makes it run in the background

- hosts: all
  tasks:
  - set_fact: 
      num_servers: 7
      client_threads_per_machine: 1
      num_clients: 10
      num_clients_mal: 0
      num_inputs: 1000000
      template_path: "./template/7s_1000000input/"
      duration_0: 5
      duration_1: 2
      duration_2: 4
      duration_3: 7
      ansible_ssh_common_args: '-o ConnectTimeout=60'  # Set the timeout value in seconds


- name: run the server processes
  hosts: server
  tasks:
    - name: starting server nodes
      command: ./cloud -party=server -sid={{ server_id }} -n_servers={{ num_servers }} -n_clients={{ num_clients }} -n_clients_mal={{ num_clients_mal }} -template_path={{ template_path }} -start="2024-05-31 18:35:00 +0000 UTC" -d0={{ duration_0 }} -d1={{ duration_1 }} -d2={{ duration_2 }} -d3={{ duration_3 }}
      async: 900
      poll: 0
      become: yes
      args:
        chdir: "{{ ansible_env.HOME }}/smc-in-a-box/cloud"
        

- name: run the output party 
  hosts: output
  tasks:
    - name: starting output nodes
      command:  ./cloud -party=outputparty -n_clients={{ num_clients }} -template_path={{ template_path }} -start="2024-05-31 18:35:00 +0000 UTC" -d0={{ duration_0 }} -d3={{ duration_3 }}
      async: 900
      poll: 0
      become: yes
      args:
        chdir: "{{ ansible_env.HOME }}/smc-in-a-box/cloud"
    - name: Wait for 30 seconds
      pause:
        seconds: 30


- name: run the clients  
  hosts: client
  tasks:
    - name: starting client nodes
      command:  ./cloud -party=client -client_threads={{ client_threads_per_machine }} -start_cid={{ client_id }} -n_clients={{ num_clients }} -n_clients_mal={{ num_clients_mal }} -n_input={{ num_inputs }} -template_path={{ template_path }}
      async: 900
      poll: 0
      become: yes
      args:
        chdir: "{{ ansible_env.HOME }}/smc-in-a-box/cloud"


