---
- name: set shared variables
  hosts: all
  gather_facts: false
  vars:
    - exp_name: "{{ exp_name }}"

- name: kick off tcpdump
  hosts: all
  gather_facts: true
  tasks:
    - name: start tcpdump on all hosts
      become: yes
      command: /usr/bin/tcpdump -s 100 -w /tmp/{{ exp_name }}.{{ ansible_facts['hostname'] }}.pcap
      async: 900 # in seconds
      poll: 0 # This detaches the task and makes it run in the background

- name: run the server processes
  hosts: server
  tasks:
    - name: starting server nodes
      command: ./cloud -party="server" -sid={{ server_id }} -n_server=4 -n_clients=5 -template_path=./template/4s_10input/ -start="2024-04-24 15:04:05 +0000 UTC" -d0=3 -d1=2 -d2=5 -d3=8
      async: 900
      poll: 0
      become: yes
      args:
        chdir: "{{ ansible_env.HOME }}/smc-in-a-box/cloud"

- name: run the output party 
  hosts: output
  tasks:
    - name: starting output nodes
      command:  ./cloud -party="outputparty" -template_path=./template/4s_10input/ -start="2024-04-23 15:04:05 +0000 UTC" -d0=3 -d1=2 -d2=5 -d3=8
      async: 900
      poll: 0
      become: yes
      args:
        chdir: "{{ ansible_env.HOME }}/smc-in-a-box/cloud"

- name: Pause for 30 seconds 
  pause:
    seconds: 30

- name: run the clients  
  hosts: client
  tasks:
    - name: starting output nodes
      command:  ./cloud -party="client" -client_threads=1 -start_cid={{ server_id }} -n_server=4 -n_clients=5 -n_input=10 template_path=./template/4s_10input/ -start="2024-04-23 15:04:05 +0000 UTC" -d0=3 -d1=2 -d2=5 -d3=8
      async: 900
      poll: 0
      become: yes
      args:
        chdir: "{{ ansible_env.HOME }}/smc-in-a-box/cloud"
